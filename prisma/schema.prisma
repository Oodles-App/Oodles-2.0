generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                         Int           @id @default(autoincrement())
  createdAt                  DateTime      @default(now())
  email                      String        @unique
  hash                       String
  businessName               String        @unique
  username                   String?
  address                    String
  lat                        Float?
  lng                        Float?
  contactNum                 String
  biography                  String?
  businessType               BusinessType
  imageUrl                   String?
  is501c3                    Boolean?      @default(false)
  orgLiveChatChannels        ChatChannel[] @relation("orgLiveChannels")
  restaurantLiveChatChannels ChatChannel[] @relation("restaurantIdLiveChannels")
  products                   Product[]
  organization               Reservation[] @relation("organization")
  reservations               Reservation[] @relation("restaurant")
  tags                       Tag[]
}

model Tag {
  id       Int       @id @default(autoincrement())
  label    String    @unique
  value    String    @unique
  category String
  products Product[]
  users    User[]
}

model Product {
  id          Int    @id @default(autoincrement())
  user        User?  @relation(fields: [userId], references: [id])
  userId      Int?
  name        String
  amount      Int
  measurement String
  tags        Tag[]
}

enum Status {
  ACTIVE
  PENDING
  CONFIRM
  COMPLETED
}

enum BusinessType {
  restaurant
  organization
}

model Reservation {
  id             Int      @id @default(autoincrement())
  reserveTime    DateTime @default(now())
  pickupTime     String
  status         Status
  organization   User     @relation(name: "organization", fields: [organizationId], references: [id])
  restaurant     User     @relation(name: "restaurant", fields: [restaurantId], references: [id])
  organizationId Int
  restaurantId   Int
  cart           Json
}

model ChatChannel {
  id           Int    @id @default(autoincrement())
  org          User   @relation(name: "orgLiveChannels", fields: [orgId], references: [id])
  orgId        Int
  restaurant   User   @relation(name: "restaurantIdLiveChannels", fields: [restaurantId], references: [id])
  restaurantId Int
  name         String

  @@unique([orgId, restaurantId])
}

model Article {
  id     Int    @id @default(autoincrement())
  title  String
  author String
  url    String
}
